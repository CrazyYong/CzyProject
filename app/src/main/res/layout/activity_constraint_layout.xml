<?xml version="1.0" encoding="utf-8"?>
<android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <TextView
        android:id="@+id/TextView1"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="TextView1"
        app:layout_constraintBaseline_toBaselineOf="@+id/TextView2"
        app:layout_constraintStart_toStartOf="parent" />

    <TextView
        android:id="@+id/TextView2"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="TextView2"
        app:layout_constraintLeft_toRightOf="@+id/TextView1"
        app:layout_constraintTop_toTopOf="parent" />

    <TextView
        android:id="@+id/TextView3"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="TextView3"
        app:layout_constraintStart_toStartOf="@+id/TextView1"
        app:layout_constraintTop_toBottomOf="@+id/TextView2" />

    <TextView
        android:id="@+id/TextView4"
        android:layout_width="wrap_content"
        android:layout_height="50dp"
        android:background="@color/cardview_shadow_start_color"
        android:gravity="center"
        android:text="TextView4"
        app:layout_constraintBaseline_toBaselineOf="@+id/TextView3"
        app:layout_constraintLeft_toRightOf="@+id/TextView3" />

    <!--角度定位-->
    <!--
    指的是TextView5的中心在TextView1的中心的120度，距离为150dp，效果如下：
    app:layout_constraintCircleAngle="120"（角度）
    app:layout_constraintCircleRadius="150dp"（距离）
    -->
    <TextView
        android:id="@+id/TextView5"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginStart="64dp"
        android:layout_marginLeft="64dp"
        android:layout_marginTop="22dp"
        android:text="TextView5"
        app:layout_constraintCircle="@+id/TextView1"
        app:layout_constraintCircleAngle="120"
        app:layout_constraintCircleRadius="150dp"
        app:layout_constraintStart_toStartOf="@+id/TextView4"
        app:layout_constraintTop_toBottomOf="@+id/TextView4" />

    <!--goneMargin-->
    <TextView
        android:id="@+id/TextView6"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="TextView6"
        app:layout_constraintBaseline_toBaselineOf="@+id/TextView5"
        app:layout_constraintLeft_toRightOf="@+id/TextView5"
        app:layout_goneMarginLeft="10dp" />

    <!--居中和偏移-->
    <TextView
        android:id="@+id/TextView7"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="TextView7"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintHorizontal_bias="0.2"
        app:layout_constraintLeft_toLeftOf="parent"
        app:layout_constraintRight_toRightOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.3" />

    <!--
    当宽或高至少有一个尺寸被设置为0dp时，可以通过属性layout_constraintDimensionRatio设置宽高比，举个例子：
    除此之外，在设置宽高比的值的时候，还可以在前面加W或H，分别指定宽度或高度限制。 例如：
    app:layout_constraintDimensionRatio="H,2:3"指的是  高:宽=2:3
    app:layout_constraintDimensionRatio="W,2:3"指的是  宽:高=2:3
    -->
    <TextView
        android:id="@+id/TextView8"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:background="@color/cardview_dark_background"
        android:text="TextView8"
        app:layout_constraintDimensionRatio="1:1"
        app:layout_constraintLeft_toLeftOf="parent"
        app:layout_constraintRight_toRightOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/TextView7" />

    <!--链式 begin-->
    <!--
    一条链的第一个控件是这条链的链头，我们可以在链头中设置 layout_constraintHorizontal_chainStyle来改变整条链的样式。
    chains提供了3种样式，分别是：
    CHAIN_SPREAD —— 展开元素 (默认)；
    CHAIN_SPREAD_INSIDE —— 展开元素，但链的两端贴近parent;
    CHAIN_PACKED —— 链的元素将被打包在一起。
    -->
    <TextView
        android:id="@+id/TextView9"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:background="@color/colorAccent"
        android:text="TextView9"
        app:layout_constraintHorizontal_weight="2"
        app:layout_constraintLeft_toLeftOf="parent"
        app:layout_constraintRight_toLeftOf="@+id/TextView10"
        app:layout_constraintTop_toBottomOf="@+id/TextView8" />

    <TextView
        android:id="@+id/TextView10"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:background="@color/colorPrimary"
        android:text="TextView10"
        app:layout_constraintHorizontal_weight="3"
        app:layout_constraintLeft_toRightOf="@+id/TextView9"
        app:layout_constraintRight_toLeftOf="@+id/TextView11"
        app:layout_constraintRight_toRightOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/TextView8" />

    <TextView
        android:id="@+id/TextView11"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:background="@color/colorPrimaryDark"
        android:text="TextView11"
        app:layout_constraintHorizontal_weight="2"
        app:layout_constraintLeft_toRightOf="@+id/TextView10"
        app:layout_constraintRight_toRightOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/TextView8" />
    <!--链式 end-->

    <!--Barrier 屏障约束-->

    <TextView
        android:id="@+id/TextView12"
        android:layout_width="wrap_content"
        android:layout_height="40dp"
        android:layout_marginTop="10dp"
        android:background="@color/colorPrimary"
        android:gravity="center"
        android:text="TextView12"
        app:layout_constraintLeft_toLeftOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/TextView11" />

    <TextView
        android:id="@+id/TextView13"
        android:layout_width="150dp"
        android:layout_height="40dp"
        android:layout_marginTop="10dp"
        android:background="@color/colorPrimary"
        android:gravity="center"
        android:text="TextView13"
        app:layout_constraintLeft_toLeftOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/TextView12" />

    <android.support.constraint.Barrier
        android:id="@+id/barrier"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        app:barrierDirection="right"
        app:constraint_referenced_ids="TextView12,TextView13" />


    <TextView
        android:id="@+id/TextView14"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="TextView14"
        app:layout_constraintLeft_toRightOf="@+id/barrier"
        app:layout_constraintTop_toBottomOf="@+id/TextView12" />

    <!--Group
Group可以把多个控件归为一组，方便隐藏或显示一组控件，举个例子：
begin
    -->

    <TextView
        android:id="@+id/TextView15"
        android:layout_width="wrap_content"
        android:layout_height="30dp"
        android:background="@color/cardview_shadow_start_color"
        android:gravity="center"
        android:text="TextView15"
        app:layout_constraintLeft_toLeftOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/TextView13" />

    <TextView
        android:id="@+id/TextView16"
        android:layout_width="wrap_content"
        android:layout_height="30dp"
        android:layout_marginLeft="15dp"
        android:background="@color/cardview_shadow_start_color"
        android:gravity="center"
        android:text="TextView16"
        app:layout_constraintLeft_toRightOf="@+id/TextView15"
        app:layout_constraintTop_toBottomOf="@+id/TextView13" />

    <TextView
        android:id="@+id/TextView17"
        android:layout_width="wrap_content"
        android:layout_height="30dp"
        android:layout_marginLeft="15dp"
        android:background="@color/cardview_shadow_start_color"
        android:gravity="center"
        android:text="TextView17"
        app:layout_constraintLeft_toRightOf="@+id/TextView16"
        app:layout_constraintTop_toBottomOf="@+id/TextView13" />

    <!--android:visibility="gone"-->
    <android.support.constraint.Group
        android:id="@+id/group"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:visibility="gone"
        app:constraint_referenced_ids="TextView15,TextView16" />

    <!--Group  end.....-->

    <!--Placeholder
    Placeholder指的是占位符。在Placeholder中可使用setContent()设置另一个控件的id，
    使这个控件移动到占位符的位置。举个例子：
    begin
    -->
    <android.support.constraint.Placeholder
        android:id="@+id/placeholder"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        app:content="@+id/TextView18"
        app:layout_constraintLeft_toLeftOf="parent"
        app:layout_constraintStart_toStartOf="@+id/TextView17"
        app:layout_constraintTop_toBottomOf="@+id/TextView17" />

    <TextView
        android:id="@+id/TextView18"
        android:layout_width="wrap_content"
        android:layout_height="30dp"
        android:background="@color/cardview_shadow_start_color"
        android:gravity="center"
        android:text="TextView18" />
    <!--end.....-->

    <!--Guideline
    Guildline像辅助线一样，在预览的时候帮助你完成布局（不会显示在界面上）。
Guildline的主要属性：
android:orientation 垂直vertical，水平horizontal
layout_constraintGuide_begin 开始位置
layout_constraintGuide_end 结束位置
layout_constraintGuide_percent 距离顶部的百分比(orientation = horizontal时则为距离左边)

    begin
    -->
    <android.support.constraint.Guideline
        android:id="@+id/guideline1"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:orientation="horizontal"
        app:layout_constraintGuide_begin="50dp" />

    <android.support.constraint.Guideline
        android:id="@+id/guideline2"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:orientation="vertical"
        app:layout_constraintGuide_percent="0.5" />

    <!--end...-->

</android.support.constraint.ConstraintLayout>